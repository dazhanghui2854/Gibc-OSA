/*******************************************************************************
* osa_kworkque.h
*
* Copyright (C) 2011-2013 ZheJiang Dahua Technology CO.,LTD.
*
* Author : Zheng wei <zheng_wei@dahuatech.com>
* Version: V1.0.0  2012-8-2 Create
*
* Desc: 定义linux内核态OSA模块对外提供的工作队列接口
*       
*           接口调用流程如下:
*           ==========================
*                   |                            
*           OSA_kWorkqueCreate
*                   |
*           OSA_kWorkqueStart / OSA_kWorkqueStop 
*                   |
*           OSA_kWorkqueDelete
*           ===========================
* Modification: 
*    Date    :  
*    Revision:
*    Author  :
*    Contents:
*******************************************************************************/


#ifndef _OSA_KWORKQUE_H_
#define _OSA_KWORKQUE_H_

#ifdef __KERNEL__    /* 仅Linux 内核态支持*/


/* ========================================================================== */
/*                             头文件区                                       */
/* ========================================================================== */

#ifdef __cplusplus
extern "C" {
#endif


/* ========================================================================== */
/*                           宏和类型定义区                                   */
/* ========================================================================== */

/*内核工作队列句柄类型*/
typedef Handle OSA_KWorkqueHandle;

/*定义工作队列的回调处理函数类型, 
入参hWorkque为工作队列句柄
入参pUserArgs为工作队列创建时传入的用户参数
返回值Int32表示函数执行成功或失败
*/
typedef Int32 (*OSA_KWorkqueCallBack)(OSA_KWorkqueHandle hWorkque, Ptr pUserArgs);


/* ========================================================================== */
/*                          数据结构定义区                                    */
/* ========================================================================== */

/*创建工作队列的参数结构体*/
typedef struct
{
    OSA_KWorkqueCallBack userFunc;            /*工作队列的回调处理函数*/
    Ptr pUserArgs;                          /*传给回调处理函数的用户参数*/

    /*start之后延时多少时间执行work queue回调函数,单位为毫秒,可以为0,表示立即执行回调*/
    Uint32 delayMs;
                                            
    Uint32 reserved[4];                     /*保留*/                                            
}OSA_KWorkqueInitParams;

/* ========================================================================== */
/*                          函数声明区                                        */
/* ========================================================================== */

/*******************************************************************************
* 函数名  : OSA_kWorkqueCreate
* 描  述  : 该函数负责创建一个内核工作队列
*           该接口不能在中断上下文调用
*
* 输  入  : - pParams:  创建工作队列的参数，参见OSA_KWorkqueInitParams定义
*
* 输  出  : - phWorkque:  工作队列句柄指针,当创建成功时输出工作队列句柄
* 返回值  :  OSA_SOK:   创建成功
*            OSA_EFAIL: 创建失败
*******************************************************************************/
Int32 OSA_kWorkqueCreate(OSA_KWorkqueInitParams *pParams, 
                            OSA_KWorkqueHandle *phWorkque);

/*******************************************************************************
* 函数名  : OSA_kWorkqueStart
* 描  述  : 该函数负责启动一个工作队列,成功调用后工作队列开始运行，调用时的注意事项:
*           1、该接口可以在中断上下文调用
*           2、可以在回调函数中调用本接口
*
* 输  入  :  - hWorkque:  工作队列句柄
*
* 输  出  : 无。
* 返回值  : OSA_SOK:   启动成功
*           OSA_EFAIL: 启动失败
*******************************************************************************/
Int32 OSA_kWorkqueStart(OSA_KWorkqueHandle hWorkque);

/*******************************************************************************
* 函数名  : OSA_kWorkqueDelayStart
* 描  述  : 该函数负责启动一个工作队列,成功调用后工作队列在delayMs后开始运行，
            调用时的注意事项:
*           1、该接口可以在中断上下文调用
*           2、可以在回调函数中调用本接口
*
* 输  入  :  - hWorkque:  工作队列句柄
*            - delayMs :  延后多少毫秒
* 输  出  : 无。
* 返回值  : OSA_SOK:   启动成功
*           OSA_EFAIL: 启动失败
*******************************************************************************/
Int32 OSA_kWorkqueDelayStart(OSA_KWorkqueHandle hWorkque, Uint32 delayMs);


/*******************************************************************************
* 函数名  : OSA_kWorkqueStop
* 描  述  : 该函数负责停止一个工作队列,成功调用后工作队列将不再调用回调函数，注意事项:
*           1、不能在中断上下文调用
*           2、不能在工作队列回调函数中调用
*
* 输  入  :  - hWorkque:  工作队列句柄
*
* 输  出  : 无。
* 返回值  : OSA_SOK:   停止成功
*           OSA_EFAIL: 停止失败
*******************************************************************************/
Int32 OSA_kWorkqueStop(OSA_KWorkqueHandle hWorkque);

/*******************************************************************************
* 函数名  : OSA_kWorkqueDelete
* 描  述  : 该函数负责删除一个工作队列，注意事项:
*           1、不能在中断上下文调用
*           2、不能在工作队列回调函数中调用
*           3、成功调用后，不能再继续访问工作队列句柄
*
* 输  入  :  - hWorkque:  工作队列句柄
*
* 输  出  : 无。
* 返回值  : OSA_SOK:   删除成功
*           OSA_EFAIL: 删除失败
*******************************************************************************/
Int32 OSA_kWorkqueDelete(OSA_KWorkqueHandle hWorkque);

#ifdef __cplusplus
}
#endif

#endif

#endif  /*  _OSA_KWORKQUE_H_  */

